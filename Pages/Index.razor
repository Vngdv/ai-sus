@page "/"
@using ImageSus.Data;
@inject ImageService ImageService;

<div class="page">
    <div class="container">
        <h1 class="find-titel">Find the Fake</h1>
        <div class="find-grid">
            @foreach (var image in @images)
            {
                <div class="image-container">
                    <img alt="hmm" src="@image.Link" @onclick="@(e => SelectSus(image))" class="@ComputeImageClasses(image)">
                    @if(solved && image.IsSus) {
                        <p class="imposter">ඞ</p>
                    }
                </div>
            }
        </div>
        <div class="button-container">
            <button @onclick="Solve" class="button" style="@((selectedId == null || solved) ? "display: none" : "")">Solve</button>
            <button @onclick="Reload" class="button">Refresh</button>
        </div>
    </div>
</div>

@code {
    private Image[]? images = new Image[]{};

    private int? selectedId;

    private bool solved;

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    private async Task Reload()
    {
        var realImages = await ImageService.GetImageAsync(count: 8, isSus: false);
        var susImages = await ImageService.GetImageAsync(count: 1, isSus: true);
        images = realImages.Concat(susImages).ToArray();
        var rng = new Random();
        images = realImages
            .Concat(susImages)
            .OrderBy(_ => rng.Next())
            .ToArray();

        StateHasChanged();
        solved = false;
    }

    private string ComputeImageClasses(Image image)
    {
        string baseClass = "grid-element ";
        if(selectedId == image.Id) {
            if(solved) {
              if (image.IsSus) {
                return baseClass + "correct";
              }
              return baseClass + "incorrect";
            }
            return baseClass + "selected";
        }
        return baseClass;
    }

    private void SelectSus(Image image)
    {
        if (solved) return;
        selectedId = image.Id;
    }

    private void Solve()
    {
        solved = true;
    }
}